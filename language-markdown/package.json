{
  "_args": [
    [
      {
        "raw": "/private/var/folders/9_/1_32dcds1fb2thx3x9h19wph0000gn/T/d-11706-5947-1ngxrp4/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/9_/1_32dcds1fb2thx3x9h19wph0000gn/T/d-11706-5947-1ngxrp4/package.tgz",
        "spec": "/private/var/folders/9_/1_32dcds1fb2thx3x9h19wph0000gn/T/d-11706-5947-1ngxrp4/package.tgz",
        "type": "local"
      },
      "/private/var/folders/9_/1_32dcds1fb2thx3x9h19wph0000gn/T/apm-install-dir-11706-5947-yv8xht"
    ]
  ],
  "_from": "../d-11706-5947-1ngxrp4/package.tgz",
  "_id": "language-markdown@0.18.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/language-markdown",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/9_/1_32dcds1fb2thx3x9h19wph0000gn/T/d-11706-5947-1ngxrp4/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/9_/1_32dcds1fb2thx3x9h19wph0000gn/T/d-11706-5947-1ngxrp4/package.tgz",
    "spec": "/private/var/folders/9_/1_32dcds1fb2thx3x9h19wph0000gn/T/d-11706-5947-1ngxrp4/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-11706-5947-1ngxrp4/package.tgz",
  "_shasum": "8a90f9033d07ecf302c7c5abaa2758d186f6930f",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/9_/1_32dcds1fb2thx3x9h19wph0000gn/T/d-11706-5947-1ngxrp4/package.tgz",
  "_where": "/private/var/folders/9_/1_32dcds1fb2thx3x9h19wph0000gn/T/apm-install-dir-11706-5947-yv8xht",
  "bugs": {
    "url": "https://github.com/burodepeper/language-markdown/issues"
  },
  "coffeelintConfig": {
    "max_line_length": {
      "level": "ignore",
      "value": 80
    }
  },
  "dependencies": {
    "lib-ass": "0.0.6",
    "lodash": "^3.10.1",
    "season": "^5.3"
  },
  "description": "Adds grammar support for Markdown (including Github flavored, AtomDoc, Markdown Extra, CriticMark, YAML/TOML front-matter, and R Markdown), and smart context-aware behavior to lists, and keyboard shortcuts for inline emphasis.",
  "devDependencies": {},
  "engines": {
    "atom": "*"
  },
  "homepage": "https://github.com/burodepeper/language-markdown#readme",
  "keywords": [
    "markdown",
    "commonmark",
    "gfm",
    "github flavored",
    "markdown extra",
    "criticmark",
    "front-matter",
    "atomdoc",
    "r markdown"
  ],
  "license": "MIT",
  "main": "lib/main.coffee",
  "name": "language-markdown",
  "optionalDependencies": {},
  "private": true,
  "readme": "# Markdown grammar\n\nA realistic implementation of various Markdown specifications as a flexible, drop-in alternative for [language-gfm](https://github.com/atom/language-gfm/). Adds smart context-aware behavior to lists, and keyboard shortcuts for inline emphasis.\n\nIf you experience any issue above a reasonable/tolerable level of annoyancy, don't hesitate to [create an issue](issues/new/).\n\n[![Build Status](https://travis-ci.org/burodepeper/language-markdown.svg?branch=master)](https://travis-ci.org/burodepeper/language-markdown)\n[![apm](https://img.shields.io/apm/dm/language-markdown.svg)](https://atom.io/packages/language-markdown)\n[![apm](https://img.shields.io/apm/v/language-markdown.svg)]()\n\n---\n\n## Supported grammars\n\n- CommonMark Markdown\n- Github Flavored Markdown (including AtomDoc)\n- Markdown Extra\n- CriticMark annotation\n- Front Matter (yaml, toml and json)\n- R Markdown\n\n### Additional features\n\n- **Smarter lists**\n  - Automatically create new list-items when pressing <kbd>enter</kbd>\n  - Indent or outdent list-items by pressing <kbd>tab</kbd> or <kbd>shift+tab</kbd>\n  - Toggle tasks with <kbd>cmd+shift+x</kbd> or <kbd>ctrl+shift+x</kbd>\n  - Remove empty trailing list-items when pressing <kbd>enter</kbd>\n- Adds shortcuts (via <kbd>_</kbd>, <kbd>*</kbd> and <kbd>~</kbd>) for toggling inline-emphasis and strike-through on selected text\n- Add shortcut (via <kbd>@</kbd>) for converting selected text to a link\n- Add shortcut (via <kbd>!</kbd>) for converting selected text to a link\n- Supports embedded `HTML`- and `Liquid`-tags\n- Embedded math functions (via `language-latex`)\n\n### Syntax-theme support\n\nBy default, most syntax-themes only provide basic styling for `.markup` classes. This package provides additional, more specific classes which are supported by the following syntax-themes:\n\n**Full/extended support**\n\n- [minimal-syntax](https://atom.io/themes/minimal-syntax) (light, high-contrast)\n- [minimal-syntax-dark](https://atom.io/themes/minimal-syntax-dark) (dark, high-contrast)\n- [pen-paper-coffee](https://atom.io/themes/pen-paper-coffee-syntax) (light, low-contrast)\n- [pubster-syntax](https://atom.io/themes/pubster-syntax) (dark, high-contrast)\n- [one-o-eight-syntax](https://atom.io/themes/one-o-eight-syntax) (various, medium-contrast)\n\n#### Add extended support for language-markdown to your syntax-theme\n\nThis grammar generates scopes that (slightly) differ from those set by `language-gfm`. I've tried to consistently add a primary non-markup-related scope to each element, and additionally some generic markup-related scopes for more specific styling. Support for `markup` scopes in most syntax-themes in minimal, so I've created a `.less` [template](https://github.com/burodepeper/language-markdown/blob/dev-scopes/resources/markup-and-down.less) to easily implement these generic styles as part of your syntax-theme. See [minimal-syntax](https://github.com/burodepeper/minimal-syntax) for a good-to-go full implementation. [Let me know](https://github.com/burodepeper/language-markdown/issues/new/) when you've added full (or partial) `language-markdown` support to your syntax-theme, and I'll add your package to the list above.\n\n---\n\n## Installation instructions\n\n1. Install `language-markdown` via\n  - your console: `apm install language-markdown`\n  - the Atom GUI: `Atom` > `Settings` > `Install` > Search for `language-markdown`\n2. Restart Atom (as a pre-caution; shouldn't be necessary)\n3. Select `language-markdown` as your Markdown grammar:\n  - press <kbd>ctrl+shift+L</kbd> and choose \"Markdown\" (this disables `language-gfm` to minimize conflicts); or\n  - manually disable `language-gfm`, and let `language-markdown` automatically handle Markdown files\n\n#### Uninstalling language-markdown\n\nThe core-package `language-gfm` is automatically disabled (unless you've enabled the setting that prevents this) when using `language-markdown` to avoid any conflicts. Because `language-markdown` is intended as a drop-in replacement you most likely won't need both anyway. However, if you uninstall `language-markdown`, `language-gfm` doesn't automatically get re-activated. There's no API available to do this, so you'll have to re-activate `language-gfm` manually, which is quite easy.\n\n1. Open the \"Settings\" and go to the \"Packages\" tab\n2. Search for `language-gfm`\n3. Click `Enable` to re-activate it\n4. You probably want to reload Atom to make sure the change takes effect\n\n## F.A.Q.\n\n**Spell-check doesn't work; how do I enable it?**<br>The core-package `spell-check` doesn't scan documents in the `text.md` by default. You can easily add this yourself:\n\n- Open the Atom settings, and find the Packages tab\n- Search for the `spell-check` package; you can find it under the Core Packages\n- Open the settings for `spell-check`\n- Append `text.md` to the list of grammars (make sure the scopes are comma-separated)\n- Reload Atom to make sure the updated settings take effect\n\n**Some of my Markdown elements aren't highlighted**<br>`language-markdown` parses your Markdown document; it does not directly color the different elements. This is done by the syntax-theme you are using. There's a good chance that your syntax-theme doesn't support all the different elements that `language-markdown` recognizes. You can ask the author of the theme to add better support for `language-markdown`, or [add styles to your custom stylesheet](http://flight-manual.atom.io/using-atom/sections/basic-customization/#style-tweaks). You can also try one of the tried and tested syntax-themes featured above. If you can't get it to work, feel free to [open an issue](https://github.com/burodepeper/language-markdown/issues/new/), and I'll see what I can do.\n\n**Which elements of Markdown are supported?**<br>Because there is no clear Markdown standard, I've chosen to follow the [CommonMark Spec](http://spec.commonmark.org/) as closely as possible within the Atom environment. On top of that, I've implemented support for a few extensions: Github Flavored Markdown, Markdown Extra, CriticMark, Front Matter, and R Markdown. Together, I believe these specs cover a solid 98% of your day-to-day Markdown needs. If you feel that an element is missing, please [open an issue](https://github.com/burodepeper/language-markdown/issues/new/).\n\n---\n\n## Contributing\n\nFirst of all, **any and all contributions are more than welcome!** Having said that, things over here are a little different than in other Atom packages.\n\n1. The main grammar file (`language-markdown.json`) is compiled, so there is no use in changing it directly. Instead, the grammar has been split up into several smaller pieces which can be found in `/grammars/repositories`, and the grammar for fenced-code-blocks is compiled from a list that can be found in `/grammars/fixtures`. After you have changed anything, you can recompile the main grammar by executing the `compile-grammar-and-reload` command (<kbd>cmd+alt+ctrl+c</kbd> on Mac OS X, and <kbd>shift-alt-ctrl-c</kbd> on other platforms) which is only available while in `dev-mode`. This will also automatically reload Atom for you.\n2. Specs are written in a custom format called `ASS` and can be found in `/spec/fixtures` as `.ass` files. I believe they are pretty self-explanatory, and installing [language-ass](https://github.com/burodepeper/language-ass/) will add syntax highlighting for you. In combination with [minimal-syntax](https://atom.io/packages/minimal-syntax) this makes them a breeze to work with. Pun intended.\n3. When submitting a PR, please do so on the `dev` branch, instead of directly on `master`. It's not that big of a deal, but it keeps merge conflicts going back and forth between `master` and `dev` to a minimum.\n4. When in doubt about a conflict on the main grammar file, don't worry about it. Before publishing an update, it will be re-compiled anyway.\n\n---\n\n#### Notes\n\n- Raw `html` is included when you have the default `language-html` grammar enabled\n- The Github Flavored `task-lists` are implemented as part of 'normal' `lists`\n- Setext-headers (underlined-headers) are not supported\n- `indented-code-blocks` have been disabled to prevent false-positives; use `fenced-code-blocks` instead ([more details](https://github.com/burodepeper/language-markdown/issues/88#issuecomment-183344420))\n- Github tables require pipes at the start of each line, and cells need a padding of at least one space; this is a suggested convention to prevent false positives\n\n#### References\n\n- http://spec.commonmark.org/0.22/\n- https://help.github.com/categories/writing-on-github/\n- https://github.com/CriticMarkup/CriticMarkup-toolkit/\n- http://jekyllrb.com/docs/frontmatter/\n- http://pandoc.org/README.html#epub-metadata\n- http://pandoc.org/demo/example9/pandocs-markdown.html\n- http://rmarkdown.rstudio.com/authoring_rcodechunks.html\n- http://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf\n- http://yihui.name/knitr/options/\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/burodepeper/language-markdown.git"
  },
  "version": "0.18.1"
}
